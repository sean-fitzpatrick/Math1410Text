<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="sec_space_coord" label="sec_space_coord">
  <title>Introduction to Cartesian Coordinates in Space</title>
  <introduction>
    <p>
      We reviewed the two-dimensional Cartesian Plane in <xref ref="CartesianPlane"/>.
      This is the familiar background on which much of your high school mathematics played out,
      and it provides the setting for the Calculus of one variable encountered in an introductory calculus course.
    </p>

    <!-- <p>
      Up to this point in this text we have considered mathematics in a 2-dimensional world.
      We have plotted graphs on the <m>xy</m>-plane using rectangular and polar coordinates and found the area of regions in the plane.
      We have considered properties of <em>solid</em> objects,
      such as volume and surface area,
      but only by first defining a curve in the plane and then rotating it out of the plane.
    </p> -->

    <p>
      While there is wonderful mathematics to explore in
      <q>2D,</q> we live in a <q>3D</q>
      world and eventually we will want to apply mathematics involving this third dimension.
      In this section we introduce Cartesian coordinates in space and explore basic surfaces.
      This will lay a foundation for much of what we do in the remainder of the text.
    </p>

    <figure xml:id="vid-vectors-spacecoord-intro" component="video">
      <caption>Video introduction to <xref ref="sec_space_coord"/></caption>
      <video youtube="zqaTPul--ZU" label="vid-vectors-spacecoord-intro"/>
    </figure>

    <p>
      Each point <m>P</m> in space can be represented with an ordered triple,
      <m>P=(a,b,c)</m>, where <m>a</m>,
      <m>b</m> and <m>c</m> represent the relative position of <m>P</m> along the <m>x</m>-, <m>y</m>- and <m>z</m>-axes,
      respectively.
      Each axis is perpendicular to the other two.
    </p>

    <p>
      Visualizing points in space on paper can be problematic,
      as we are trying to represent a 3-dimensional concept on a 2-dimensional medium.
      We cannot draw three lines representing the three axes in which each line is perpendicular to the other two.
      Despite this issue,
      standard conventions exist for plotting shapes in space that we will discuss that are more than adequate.
    </p>

    <p>
      One convention is that the axes must conform to the
      <em>right hand rule</em>.
      This rule states that when the index finger of the right hand is extended in the direction of the positive <m>x</m> axis,
      and the middle finger
      (bent <q>inward</q> so it is perpendicular to the palm)
      points along the positive <m>y</m> axis,
      then the extended thumb will point in the direction of the positive <m>z</m> axis. (It may take some thought to verify this,
      but this system is inherently different from the one created by using the
      <q>left hand rule.</q>)<idx><h>right hand rule</h><h>of Cartesian coordinates</h></idx>
    </p>

    <p>
      As long as the coordinate axes are positioned so that they follow this rule,
      it does not matter how the axes are drawn on paper.
      There are two popular methods that we briefly discuss.
    </p>

    <figure xml:id="fig_cartcoord1">
      <caption>Plotting the point <m>P=(2,1,3)</m> in space</caption>
      <!-- START figures/figcartcoord1_3D.asy -->
      <image width="47%">
        <shortdescription>
          Plot of point P= (2, 1,3) in space.
        </shortdescription>
        <description>
          <p>
            The <m>x</m> and <m>y</m> axes are drawn from <m>-2</m> to <m>2</m> and the <m>z</m>
             axis is drawn from <m>-1</m> to <m>3</m>. The point <m>P= (2,1,3)</m> is drawn in space.
             A dashed cuboid is drawn with the point <m>P</m> on the corner away from the axes.
          </p>
        </description>
      <asymptote label="img_cartcoord1">



          //ASY file for figcartcoord1.pdf in Chapter 10.1

          size(200,200,IgnoreAspect);
          //currentprojection=perspective(7,2,1);
          currentprojection=orthographic(11,5,2.8);
          defaultrender.merge=true;

          // setup and draw the axes
          real[] myxchoice={-1,1,2,3};
          real[] myychoice={-2,-1,1,2};
          real[] myzchoice={-2,-1,1,2};
          defaultpen(0.5mm);
          pair xbounds=(-3,3.5);
          pair ybounds=(-2.5,2.5);
          pair zbounds=(-2.5,2.5);

          xaxis3("",xbounds.x,xbounds.y,black,OutTicks(myxchoice),Arrow3(size=3mm));
          yaxis3("",ybounds.x,ybounds.y,black,OutTicks(myychoice),Arrow3(size=3mm));
          zaxis3("",zbounds.x,zbounds.y,black,OutTicks(myzchoice),Arrow3(size=3mm));

          label("$z$",(xbounds.y+0.05*(xbounds.y-xbounds.x),0,0));
          label("$x$",(0,ybounds.y+0.05*(ybounds.y-ybounds.x),0));
          label("$y$",(0,0,zbounds.y+0.05*(zbounds.y-zbounds.x)));

          // Draw the lines
          draw((0,0,1)--(0,2,1)--(3,2,1)--(3,0,1)--(0,0,1), redpen+dashed+linewidth(.5));//top
          draw((0,0,0)--(0,2,0)--(3,2,0)--(3,0,0)--(0,0,0), redpen+dashed+linewidth(.5));//bottom
          draw((3,0,0)--(3,0,1), redpen+dashed+linewidth(.5));//up1
          draw((0,2,0)--(0,2,1), redpen+dashed+linewidth(.5));//up2
          draw((3,2,0)--(3,2,1), redpen+dashed+linewidth(.5));//up3
          label("$P$",(3,2,1),E);
          dotfactor=3;  dot((3,2,1),bluepen);

        </asymptote>
      </image>
      <!-- figures/figcartcoord1_3D.asy END -->
    </figure>

    <p>
      In <xref ref="fig_cartcoord1"/>
      we see the point <m>P=(2,1,3)</m> plotted on a set of axes.
      The basic convention here is that the <m>xy</m>-plane is drawn in its standard way,
      with the <m>z</m>-axis down to the left.
      The perspective is that the paper represents the <m>xy</m>-plane and the positive <m>z</m> axis is coming up,
      off the page.
      This method is preferred by many engineers.
      Because it can be hard to tell where a single point lies in relation to all the axes,
      dashed lines have been added to let one see how far along each axis the point lies.
    </p>

    <p>
      One can also consider the <m>xy</m>-plane as being a horizontal plane in, say,
      a room, where the positive <m>z</m>-axis is pointing up.
      When one steps back and looks at this room,
      one might draw the axes as shown in <xref ref="fig_cartcoord2"/>.
      The same point <m>P</m> is drawn, again with dashed lines.
      This point of view is preferred by most mathematicians,
      and is the convention adopted by this text.
    </p>

    <p>
      Just as the <m>x</m>- and <m>y</m>-axes divide the plane into four <em>quadrants</em>,
      the <m>x</m>-, <m>y</m>-, and <m>z</m>-coordinate planes divide space into eight <em>octants</em>.
      The octant in which <m>x</m>, <m>y</m>,
      and <m>z</m> are positive is called the <em>first octant</em>.
      We do not name the other seven octants in this text.
          <idx><h>octant</h><h>first</h></idx>
          <idx><h>first octant</h></idx>
    </p>

    <figure xml:id="fig_cartcoord2">
      <caption>Plotting the point <m>P=(2,1,3)</m> in space with a perspective used in this text</caption>
      <!-- START figures/figcartcoord2_3D.asy -->
      <image width="47%">
        <shortdescription>
          Plot of point P= (2,1,3) in space with perspective used in the text.
        </shortdescription>
        <description>
          <p>
            The <m>x</m> and <m>y</m> axes are drawn from <m>-2</m> to <m>2</m> and the <m>z</m>
            axis is drawn from <m>-1</m> to <m>3</m>. The point <m>P= (2,1,3)</m> is drawn in space.
            A dashed cuboid is drawn with the point <m>P</m> on the corner away from the axes.
            The <m>z</m> axis is shown as the vertical line.
          </p>
        </description>
      <asymptote label="img_cartcoord2">



          //ASY file for figcartcoord2.pdf in Chapter 10

          size(200,200,IgnoreAspect);
          //currentprojection=perspective(7,2,1);
          currentprojection=orthographic(4,4,2);
          defaultrender.merge=true;

          // setup and draw the axes
          real[] myxchoice={-2,2};
          real[] myychoice={-2,2};
          real[] myzchoice={-2,3};
          defaultpen(0.5mm);
          pair xbounds=(-2,2.5);
          pair ybounds=(-2.5,2.5);
          pair zbounds=(-1.5,4);

          xaxis3("",xbounds.x,xbounds.y,black,OutTicks(myxchoice),Arrow3(size=3mm));
          yaxis3("",ybounds.x,ybounds.y,black,OutTicks(myychoice),Arrow3(size=3mm));
          zaxis3("",zbounds.x,zbounds.y,black,OutTicks(myzchoice),Arrow3(size=3mm));

          label("$x$",(xbounds.y+0.05*(xbounds.y-xbounds.x),0,0));
          label("$y$",(0,ybounds.y+0.05*(ybounds.y-ybounds.x),0));
          label("$z$",(0,0,zbounds.y+0.05*(zbounds.y-zbounds.x)));

          // Draw the lines
          //draw((2,0,0)--(2,1,0), redpen+dashed+linewidth(.5));
          //draw((2,1,0)--(2,1,3)--(0,0,3), redpen+dashed+linewidth(.5));
          //draw((0,1,0)--(2,1,0), redpen+dashed+linewidth(.5));
          draw((0,0,3)--(0,1,3)--(2,1,3)--(2,0,3)--(0,0,3), redpen+dashed+linewidth(.5));//top
          draw((0,0,0)--(0,1,0)--(2,1,0)--(2,0,0)--(0,0,0), redpen+dashed+linewidth(.5));//top
          draw((2,0,0)--(2,0,3), redpen+dashed+linewidth(.5));//up1
          draw((0,1,0)--(0,1,3), redpen+dashed+linewidth(.5));//up2
          draw((2,1,0)--(2,1,3), redpen+dashed+linewidth(.5));//up
          label("$P$",(2,1,3),E);
          dotfactor=3;  dot((2,1,3),bluepen);

        </asymptote>
      </image>
      <!-- figures/figcartcoord2_3D.asy END -->
    </figure>
  </introduction>

  <subsection>
    <title>Measuring Distances</title>
    <p>
      It is of critical importance to know how to measure distances between points in space.
      The formula for doing so is based on measuring distance in the plane,
      and is known
      (in both contexts)
      as the Euclidean measure of distance.
    </p>

    <definition xml:id="def_space_distance">
      <title>Distance In Space</title>
      <statement>
        <p>
          Let <m>P=(x_1,y_1,z_1)</m> and <m>Q = (x_2,y_2,z_2)</m> be points in space.
          The distance <m>D</m> between <m>P</m> and <m>Q</m> is <idx><h>distance</h><h>between points in space</h></idx>
          <me>
            D = \sqrt{(x_2-x_1)^2+(y_2-y_1)^2+(z_2-z_1)^2}
          </me>.
        </p>
      </statement>
    </definition>

    <p>
      We refer to the line segment that connects points <m>P</m> and <m>Q</m> in space as <m>\overline{PQ}</m>,
      and refer to the length of this segment as <m>\norm{\overline{PQ}}</m>.
      The above distance formula allows us to compute the length of this segment.
    </p>

    <figure xml:id="vid-vectors-spacecoord-distance" component="video">
      <caption>Video presentation of <xref ref="def_space_distance"/></caption>
      <video youtube="zNUbi5ahC0Y" label="vid-vectors-spacecoord-distance"/>
    </figure>

    <example xml:id="ex_space1">
      <title>Length of a line segment</title>
      <statement>
        <p>
          Let <m>P = (1,4,-1)</m> and let <m>Q = (2,1,1)</m>.
          Draw the line segment <m>\overline{PQ}</m> and find its length.
        </p>
      </statement>

      <solution>
        <p>
          The points <m>P</m> and <m>Q</m> are plotted in <xref ref="fig_space1"/>;
          no special consideration need be made to draw the line segment connecting these two points;
          simply connect them with a straight line.
          One <em>cannot</em> actually measure this line on the page and deduce anything meaningful;
          its true length must be measured analytically.
          Applying <xref ref="def_space_distance"/>, we have
          <me>
            \norm{\overline{PQ}} = \sqrt{(2-1)^2+(1-4)^2+(1-(-1))^2} = \sqrt{14}\approx 3.74
          </me>.
        </p>

        <figure xml:id="fig_space1">
          <caption>Plotting points <m>P</m> and <m>Q</m> in <xref ref="ex_space1"/></caption>
          <!-- START figures/figspace1_3D.asy -->
          <image width="47%">
            <shortdescription>
              Plotting point P =(1, 4, -1) and point Q= (2, 1, 1).
            </shortdescription>
            <description>
              <p>
                The <m>x</m> axis is drawn from <m>0</m> to <m>2</m>, the <m>z</m> axis is
                drawn from <m>-2</m> to <m>2</m> and the <m>y</m> axis is drawn from <m>0</m>
                to <m>4</m>. Two points <m>P = (1, 4, -1)</m> and <m>Q = (2, 1, 1)</m> are
                drawn in space and are connected by a straight line.
              </p>
            </description>
            <asymptote label="img_space1">



              //ASY file for figspace1.pdf in Chapter 10.1

              size(200,200,IgnoreAspect);
              //currentprojection=perspective(7,2,1);
              currentprojection=orthographic(4,4,1);
              defaultrender.merge=true;

              // setup and draw the axes
              real[] myxchoice={2};
              real[] myychoice={2,4};
              real[] myzchoice={-2,2};
              defaultpen(0.5mm);
              pair xbounds=(-1,2.5);
              pair ybounds=(-1,4.5);
              pair zbounds=(-2.5,2.5);

              xaxis3("",xbounds.x,xbounds.y,black,OutTicks(myxchoice),Arrow3(size=3mm));
              yaxis3("",ybounds.x,ybounds.y,black,OutTicks(myychoice),Arrow3(size=3mm));
              zaxis3("",zbounds.x,zbounds.y,black,OutTicks(myzchoice),Arrow3(size=3mm));

              label("$x$",(xbounds.y+0.05*(xbounds.y-xbounds.x),0,0));
              label("$y$",(0,ybounds.y+0.05*(ybounds.y-ybounds.x),0));
              label("$z$",(0,0,zbounds.y+0.05*(zbounds.y-zbounds.x)));

              // Draw the lines for Q=(2,1,1)
              draw((2,0,0)--(2,1,0)--(0,1,0), redpen+dashed+linewidth(.5));//top Q
              //draw((0,0,1)--(0,1,1)--(2,1,1)--(2,0,1)--(0,0,1), redpen+dashed+linewidth(.5));//top Q
              //draw((0,0,0)--(0,1,0)--(2,1,0)--(2,0,0)--(0,0,0), redpen+dashed+linewidth(.5));//bottom Q
              //draw((2,0,0)--(2,0,1), redpen+dashed+linewidth(.5));//up1 Q
              //draw((0,1,0)--(0,1,1), redpen+dashed+linewidth(.5));//up2 Q
              draw((2,1,0)--(2,1,1), redpen+dashed+linewidth(.5));//up3 Q
              label("$Q$",(2,1,1),E);
              dotfactor=3;  dot((2,1,1),bluepen);

              // Draw the lines for P=(1,4,-1)
              //draw((0,0,-1)--(0,4,-1)--(1,4,-1)--(1,0,-1)--(0,0,-1), redpen+dashed+linewidth(.5));//top P
              //draw((0,0,0)--(0,4,0)--(1,4,0)--(1,0,0)--(0,0,0), redpen+dashed+linewidth(.5));//bottom P
              //draw((1,0,0)--(1,0,-1), redpen+dashed+linewidth(.5));//up1 P
              //draw((0,4,0)--(0,4,-1), redpen+dashed+linewidth(.5));//up2 P
              draw((0,4,0)--(1,4,0)--(1,0,0), redpen+dashed+linewidth(.5));//bottom P
              draw((1,4,0)--(1,4,-1), redpen+dashed+linewidth(.5));//up3 P
              label("$P$",(1,4,-1),E);
              dotfactor=3;  dot((1,4,-1),bluepen);

              //line from P to Q
              draw((1,4,-1)--(2,1,1), bluepen);

            </asymptote>
          </image>
          <!-- figures/figspace1_3D.asy END -->
        </figure>
      </solution>
      <solution component="video">
        <title>Video solution</title>
        <video width="98%" youtube="EF-aTKoAQsU" xml:id="vid-vectors-spacecoord-linesegment" label="vid-vectors-spacecoord-linesegment" component="video"/>
      </solution>
    </example>
  </subsection>

  <subsection xml:id="sec-planes-in-space">
    <title>Introduction to Planes in Space</title>
    <p>
      The coordinate axes naturally define three planes
      (shown in <xref ref="fig_coordplanes"/>),
      the <em>coordinate planes</em>:
      the <m>xy</m>-plane,
      the <m>yz</m>-plane and the <m>xz</m>-plane.
      The <m>xy</m>-plane is characterized as the set of all points in space where the <m>z</m>-value is 0.
          <idx><h>planes</h><h>coordinate plane</h></idx>
          <idx><h>planes</h><h>introduction</h></idx>
      This, in fact, gives us an equation that describes this plane: <m>z=0</m>.
      Likewise, the <m>xz</m>-plane is all points where the <m>y</m>-value is 0, characterized by <m>y=0</m>.
    </p>

    <figure xml:id="vid-vectors-spacecoord-planes" component="video">
      <caption>Video introduction to <xref ref="sec-planes-in-space"/></caption>
      <video youtube="8yImf_yW-Ys" label="vid-vectors-spacecoord-planes"/>
    </figure>

    <figure xml:id="fig_coordplanes">
      <caption>The <m>xy</m>-plane in (a), the <m>yz</m>-plane in (b) and the <m>xz</m>-plane in (c)</caption>
      <sidebyside widths="31% 31% 31%" margins="0%">
        <figure xml:id="fig_spacexy_3D">
          <caption/>
          <!-- START figures/figspacexy_3D.asy -->
          <image>
            <shortdescription>
              Graph of xy plane in space.
            </shortdescription>
            <description>
              <p>
                The axes are uncalibrated. The plane is drawn along the <m>x</m> and <m>y</m> axes
                at <m>z=0</m>, the normal is along the <m>z</m> axis.
              </p>
            </description>
          <asymptote label="img_spacexy_3D">



              //ASY file for figspacexy.pdf in Chapter 10

              size(198,198,IgnoreAspect);
              //currentprojection=perspective(7,2,1);
              currentprojection=orthographic(4,4,2);
              defaultrender.merge=true;

              // setup and draw the axes
              real[] myxchoice={};
              real[] myychoice={};
              real[] myzchoice={};
              defaultpen(0.5mm);
              pair xbounds=(-2.5,2.5);
              pair ybounds=(-2.5,2.5);
              pair zbounds=(-2.5,2.5);

              xaxis3("",xbounds.x,xbounds.y,black,OutTicks(myxchoice),Arrow3(size=3mm));
              yaxis3("",ybounds.x,ybounds.y,black,OutTicks(myychoice),Arrow3(size=3mm));
              zaxis3("",zbounds.x,zbounds.y,black,OutTicks(myzchoice),Arrow3(size=3mm));

              label("$x$",(xbounds.y+0.05*(xbounds.y-xbounds.x),0,0));
              label("$y$",(0,ybounds.y+0.05*(ybounds.y-ybounds.x),0));
              label("$z$",(0,0,zbounds.y+0.05*(zbounds.y-zbounds.x)));

              //Draw the xy-plane
              triple f(pair t) {
                return (t.x,t.y,0);
              }
              surface s=surface(f,(-2,-2),(2,2),8,8,Spline);
              pen p=apexmeshpen;
              draw(s,surfacepen,meshpen=p,nolight,render(merge=true));

            </asymptote>
          </image>
        <!-- figures/figspacexy_3D.asy END -->
        </figure>

        <figure xml:id="fig_spaceyz_3D">
          <caption/>
          <!-- START figures/figspaceyz_3D.asy -->
          <image>
            <shortdescription>
              Graph of yz plane in space.
            </shortdescription>
            <description>
              <p>
                The axes are uncalibrated. The plane is drawn along the <m>y</m> and <m>z</m>
                axes at <m>x=0</m>, the normal is along the <m>x</m> axis.
              </p>
            </description>
            <asymptote label="img_spaceyz_3D">



              //ASY file for figspaceyz.pdf in Chapter 10

              size(198,198,IgnoreAspect);
              //currentprojection=perspective(7,2,1);
              currentprojection=orthographic(4,4,2);
              defaultrender.merge=true;

              // setup and draw the axes
              real[] myxchoice={};
              real[] myychoice={};
              real[] myzchoice={};
              defaultpen(0.5mm);
              pair xbounds=(-2.5,2.5);
              pair ybounds=(-2.5,2.5);
              pair zbounds=(-2.5,2.5);

              xaxis3("",xbounds.x,xbounds.y,black,OutTicks(myxchoice),Arrow3(size=3mm));
              yaxis3("",ybounds.x,ybounds.y,black,OutTicks(myychoice),Arrow3(size=3mm));
              zaxis3("",zbounds.x,zbounds.y,black,OutTicks(myzchoice),Arrow3(size=3mm));

              label("$x$",(xbounds.y+0.05*(xbounds.y-xbounds.x),0,0));
              label("$y$",(0,ybounds.y+0.05*(ybounds.y-ybounds.x),0));
              label("$z$",(0,0,zbounds.y+0.05*(zbounds.y-zbounds.x)));

              //Draw the yz-plane
              triple f(pair t) {
                return (0,t.x,t.y);
              }
              surface s=surface(f,(-2,-2),(2,2),8,8,Spline);
              pen p=apexmeshpen;
              draw(s,surfacepen,meshpen=p,nolight,render(merge=true));

            </asymptote>
          </image>
          <!-- figures/figspaceyz_3D.asy END -->
        </figure>

        <figure xml:id="fig_spacexz_3D">
          <caption/>
          <!-- START figures/figspacexz_3D.asy -->
          <image>
            <shortdescription>
              Graph of xz plane in space.
            </shortdescription>
            <description>
              <p>
                The axes are uncalibrated. The plane is drawn along the <m>x</m> and <m>z</m> axes at
                <m>y =0</m>, the normal is along the <m>y</m> axis.
              </p>
            </description>
          <asymptote label="img_spacexz_3D">



              //ASY file for figspacexz.pdf in Chapter 10

              size(198,198,IgnoreAspect);
              //currentprojection=perspective(7,2,1);
              currentprojection=orthographic(4,4,2);
              defaultrender.merge=true;

              // setup and draw the axes
              real[] myxchoice={};
              real[] myychoice={};
              real[] myzchoice={};
              defaultpen(0.5mm);
              pair xbounds=(-2.5,2.5);
              pair ybounds=(-2.5,2.5);
              pair zbounds=(-2.5,2.5);

              xaxis3("",xbounds.x,xbounds.y,black,OutTicks(myxchoice),Arrow3(size=3mm));
              yaxis3("",ybounds.x,ybounds.y,black,OutTicks(myychoice),Arrow3(size=3mm));
              zaxis3("",zbounds.x,zbounds.y,black,OutTicks(myzchoice),Arrow3(size=3mm));

              label("$x$",(xbounds.y+0.05*(xbounds.y-xbounds.x),0,0));
              label("$y$",(0,ybounds.y+0.05*(ybounds.y-ybounds.x),0));
              label("$z$",(0,0,zbounds.y+0.05*(zbounds.y-zbounds.x)));

              //Draw the xz-plane
              triple f(pair t) {
                return (t.x,0,t.y);
              }
              surface s=surface(f,(-2,-2),(2,2),8,8,Spline);
              pen p=apexmeshpen;
              draw(s,surfacepen,meshpen=p,nolight,render(merge=true));

            </asymptote>
          </image>
        <!-- figures/figspacexz_3D.asy END -->
        </figure>
      </sidebyside>
    </figure>

    <p>
      The equation <m>x=2</m> describes all points in space where the <m>x</m>-value is 2.
      This is a plane,
      parallel to the <m>yz</m>-coordinate plane,
      shown in <xref ref="fig_space2"/>.
    </p>

    <figure xml:id="fig_space2">
      <caption>The plane <m>x=2</m></caption>
      <!-- START figures/figspace2_3D.asy -->
      <image width="47%">
        <shortdescription>
          Graph of plane x=2 in space.
        </shortdescription>
        <description>
          <p>
            The <m>y</m> and the <m>z</m> axes are uncalibrated, the <m>x</m> axis is
            drawn from <m>-2</m> to <m>2</m>. The <m>yz</m> plane is drawn at <m>x=-2</m>.
          </p>
        </description>
        <asymptote label="img_space2">



          //ASY file for figspace2.pdf in Chapter 10.1

          size(200,200,IgnoreAspect);
          //currentprojection=perspective(7,2,1);
          currentprojection=orthographic(4,4,2);
          defaultrender.merge=true;

          // setup and draw the axes
          real[] myxchoice={-2,2};
          real[] myychoice={};
          real[] myzchoice={};
          defaultpen(0.5mm);
          pair xbounds=(-2.5,3.5);
          pair ybounds=(-2.5,2.5);
          pair zbounds=(-2.5,2.5);

          xaxis3("",xbounds.x,xbounds.y,black,OutTicks(myxchoice),Arrow3(size=3mm));
          yaxis3("",ybounds.x,ybounds.y,black,OutTicks(myychoice),Arrow3(size=3mm));
          zaxis3("",zbounds.x,zbounds.y,black,OutTicks(myzchoice),Arrow3(size=3mm));

          label("$x$",(xbounds.y+0.05*(xbounds.y-xbounds.x),0,0));
          label("$y$",(0,ybounds.y+0.05*(ybounds.y-ybounds.x),0));
          label("$z$",(0,0,zbounds.y+0.05*(zbounds.y-zbounds.x)));

          //Draw the x=2 plane
          triple f(pair t) {
            return (2,t.x,t.y);
          }
          surface s=surface(f,(-2,-2),(2,2),8,8,Spline);
          pen p=apexmeshpen;
          draw(s,surfacepen,meshpen=p,nolight,render(merge=true));

        </asymptote>
      </image>
      <!-- figures/figspace2_3D.asy END -->
    </figure>

    <example xml:id="ex_space3">
      <title>Regions defined by planes</title>
      <statement>
        <p>
          Sketch the region defined by the inequalities <m>-1\leq y\leq 2</m>.
        </p>
      </statement>

      <solution>
        <p>
          The region is all points between the planes <m>y=-1</m> and <m>y=2</m>.
          These planes are sketched in <xref ref="fig_space3"/>,
          which are parallel to the <m>xz</m>-plane.
          Thus the region extends infinitely in the <m>x</m> and <m>z</m> directions,
          and is bounded by planes in the <m>y</m> direction.
        </p>

        <figure xml:id="fig_space3">
          <caption>Sketching the boundaries of a region in <xref ref="ex_space3"/></caption>
          <!-- START figures/figspace3_3D.asy -->
          <image width="47%">
            <shortdescription>
              Graph of two planes that are parallel to the xz plane.
            </shortdescription>
            <description>
              <p>
                The <m>y</m> and <m>z</m> axes are uncalibrated, the <m>x</m> axis is drawn
                from <m>-2</m> and <m>2</m>. Two planes are drawn parallel to the <m>xz</m>
                plane at <m>y=-1</m> and <m>y =2</m>, with normal along the <m>y</m> axis.
              </p>
            </description>
            <asymptote label="img_space3">



              //ASY file for figspace3.pdf in Chapter 10.1

              size(200,200,IgnoreAspect);
              //currentprojection=perspective(7,2,1);
              currentprojection=orthographic(4,2.5,2);
              defaultrender.merge=true;

              // setup and draw the axes
              real[] myxchoice={-2,2};
              real[] myychoice={};
              real[] myzchoice={};
              defaultpen(0.5mm);
              pair xbounds=(-2.5,2.5);
              pair ybounds=(-2.5,2.5);
              pair zbounds=(-2.5,2.5);

              xaxis3("",xbounds.x,xbounds.y,black,OutTicks(myxchoice),Arrow3(size=3mm));
              yaxis3("",ybounds.x,ybounds.y,black,OutTicks(myychoice),Arrow3(size=3mm));
              zaxis3("",zbounds.x,zbounds.y,black,OutTicks(myzchoice),Arrow3(size=3mm));

              label("$x$",(xbounds.y+0.05*(xbounds.y-xbounds.x),0,0));
              label("$y$",(0,ybounds.y+0.05*(ybounds.y-ybounds.x),0));
              label("$z$",(0,0,zbounds.y+0.05*(zbounds.y-zbounds.x)));

              //Draw the y=-1 plane
              triple f(pair t) {
                return (t.x,-1,t.y);
              }
              surface s=surface(f,(-2,-2),(2,2),8,8,Spline);
              pen p=apexmeshpen;
              draw(s,surfacepen,meshpen=p,nolight,render(merge=true));

              //Draw the y=2 plane
              triple f(pair t) {
                return (t.x,2,t.y);
              }
              surface s=surface(f,(-2,-2),(2,2),8,8,Spline);
              draw(s,surfacepen,meshpen=p,nolight,render(merge=true));

            </asymptote>
          </image>
          <!-- figures/figspace3_3D.asy END -->
        </figure>
      </solution>
      <solution component="video">
        <title>Video solution</title>
        <video width="98%" youtube="-9luj-GlMqA" xml:id="vid-vectors-spacecoord-planes-eg" label="vid-vectors-spacecoord-planes-eg" component="video"/>
      </solution>
    </example>
  </subsection>

  <exercises>
    <subexercises xml:id="TaC-space-coordinates">
      <title>Terms and Concepts</title>

      <exercise label="TaC-space-coordinates-1">
        <!-- <webwork xml:id="webwork-TaC-space-coordinates-1">
            <pg-code>
            </pg-code> -->
            <statement>
              <p>
                Axes drawn in space must conform to the <fillin/> <fillin/> rule.
              </p>
            </statement>
            <answer>
              <p>
                right hand
              </p>
            </answer>
        <!-- </webwork> -->
      </exercise>

      <exercise label="TaC-space-coordinates-2">
        <webwork xml:id="webwork-TaC-space-coordinates-2">
            <!-- <pg-macros><macro-file>contextArbitraryString.pl</macro-file></pg-macros> -->

            <pg-code>
              Context("ArbitraryString");
              $line=Compute("line");
              $plane=Compute("plane");
              $lineevaluator=$line-&gt;cmp(checker =&gt; sub {
                my ($correct,$student,$ans) = @_;
                $correct = $correct-&gt;value;
                $student = $student-&gt;value;
                $student =~ s/^~~W+|~~W+$//g;
                return uc($correct) eq uc($student);
              });
              $planeevaluator=$plane-&gt;cmp(checker =&gt; sub {
                my ($correct,$student,$ans) = @_;
                $correct = $correct-&gt;value;
                $student = $student-&gt;value;
                $student =~ s/^~~W+|~~W+$//g;
                return uc($correct) eq uc($student);
              });
            </pg-code>

            <statement>
              <p>
                In the plane,
                the equation <m>x=2</m> defines a <var name="$line" evaluator="$lineevaluator" width="10"/>;
              </p>

              <p>
                in space, <m>x=2</m> defines a <var name="$plane" evaluator="$planeevaluator" width="10"/>.
              </p>
            </statement>
        </webwork>
      </exercise>
    </subexercises>
    <subexercises>
      <title>Problems</title>
      <exercise label="ex-space-coordinates-distance">
        <webwork xml:id="webwork-ex-space-coordinates-distance">
            <pg-code>
              Context("Point");
              $A=Point("(1,4,2)");
              $B=Point("(2,6,3)");
              $C=Point("(4,3,1)");
              $AB=$B-$A;
              $BC=$C-$B;
              $CA=$A-$C;
              @ABcoords=$AB-&gt;value;
              @BCcoords=$BC-&gt;value;
              @CAcoords=$CA-&gt;value;
              Context()-&gt;flags-&gt;set(reduceConstantFunctions=&gt;0);
              $magAB=Formula("sqrt(($ABcoords[0])^2+($ABcoords[1])^2+($ABcoords[2])^2)");
              $magBC=Formula("sqrt(($BCcoords[0])^2+($BCcoords[1])^2+($BCcoords[2])^2)");
              $magCA=Formula("sqrt(($CAcoords[0])^2+($CAcoords[1])^2+($CAcoords[2])^2)");
              ($a,$b,$c)=num_sort($magAB,$magBC,$magCA);
              $dodonot=(($a)**2+($b)**2==($c)**2)?'do':'do not';
              $yn=PopUp(['?','do','do not'],$dodonot);
            </pg-code>

            <statement>
              <p>
                The points <m>A=(1,4,2)</m>,
                <m>B=(2,6,3)</m> and <m>C=(4,3,1)</m> form a triangle in space.
                Find the distances between each pair of points and determine if the triangle is a right triangle.
              </p>

              <p>
                <m>\left\lVert\overline{AB}\right\rVert=</m><var name="$magAB" width="10"/>
              </p>

              <p>
                <m>\left\lVert\overline{BC}\right\rVert=</m><var name="$magBC" width="10"/>
              </p>

              <p>
                <m>\left\lVert\overline{CA}\right\rVert=</m><var name="$magCA" width="10"/>
              </p>

              <p>
                The three points <var name="$yn" form="popup"/> form a right triangle.
              </p>
            </statement>
            <solution>
              <p>
                <m>\norm{\overline{AB}} = \sqrt{6}</m>;
                <m>\norm{\overline{BC}} = \sqrt{17}</m>;
                <m>\norm{\overline{AC}} = \sqrt{11}</m>.
                Yes, it is a right triangle as <m>\norm{\overline{AB}}^2+\norm{\overline{AC}}^2=\norm{\overline{BC}}^2</m>.
              </p>
            </solution>
        </webwork>
      </exercise>

      <exercise label="ex-space-coordinates-quadrilateral">
        <!-- <webwork xml:id="webwork-ex-space-coordinates-quadrilateral">
            <pg-code>
            </pg-code> -->
            <statement>
              <p>
                The points <m>A=(1,1,3)</m>, <m>B=(3,2,7)</m>,
                <m>C=(2,0,8)</m> and <m>D = (0,-1,4)</m> form a quadrilateral <m>ABCD</m> in space.
                Is this a parallelogram?
              </p>
            </statement>
            <solution>
              <p>
                Yes, as opposite sides have equal length.
                <m>\norm{\overline{AB}} = \sqrt{21}=\norm{\overline{CD}}</m>;
                <m>\norm{\overline{BC}} = \sqrt{6}=\norm{\overline{AD}}</m>.
              </p>
            </solution>
        <!-- </webwork> -->
      </exercise>

      <exercisegroup cols="2" xml:id="exset-space-coordinates-region">

        <introduction>
          <p>
            In the following exercises,
            describe the region in space defined by the inequalities.
          </p>
        </introduction>

        <exercise label="ex-space-coordinates-region-2">
          <webwork xml:id="webwork-ex-space-coordinates-region-2">
              <pg-code>
              </pg-code>

              <statement>
                <p>
                  <m>0\leq x\leq 3</m>
                </p>
              </statement>
              <solution>
                <p>
                  Region bounded between the planes <m>x=0</m>
                  (the <m>y-z</m> coordinate plane)
                  and <m>x=3</m>.
                </p>
              </solution>
          </webwork>
        </exercise>

        <exercise label="ex-space-coordinates-region-3">
          <!-- <webwork xml:id="webwork-ex-space-coordinates-region-3">
              <pg-code>
              </pg-code> -->
              <statement>
                <p>
                  <m>x\geq 0,\ y\geq0, \ z\geq0</m>
                </p>
              </statement>
              <solution>
                <p>
                  The first octant of space;
                  all points <m>(x,y,z)</m> where each of <m>x</m>,
                  <m>y</m> and <m>z</m> are positive.
                  (Analogous to the first quadrant in the plane.)
                </p>
              </solution>
          <!-- </webwork> -->
        </exercise>

        <exercise label="ex-space-coordinates-region-4">
          <!-- <webwork xml:id="webwork-ex-space-coordinates-region-4">
              <pg-code>
              </pg-code> -->
              <statement>
                <p>
                  <m>y\geq 3</m>
                </p>
              </statement>
              <solution>
                <p>
                  All points in space where the <m>y</m> value is greater than 3;
                  viewing space as often depicted in this text,
                  this is the region <q>to the right</q>
                  of the plane <m>y=3</m> (which is parallel to the <m>x-z</m> coordinate plane.)
                </p>
              </solution>
          <!-- </webwork> -->
        </exercise>

      </exercisegroup>
    </subexercises>
  </exercises>
</section>
